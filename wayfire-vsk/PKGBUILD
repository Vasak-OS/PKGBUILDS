pkgname=wayfire-vsk
pkgver=0.8.0.r2669.88ceeff7
_pkgname=wayfire
_pluginname=wayfire-vsk-plugin
_pluginver=0.0.1
url="https://github.com/ammen99/wayfire"
pkgrel=1
pkgdesc="3D wayland compositor for VasakOS"
arch=(x86_64)
url=https://wayfire.org
license=(custom:MIT)
depends=(
    cairo
    pango
    libjpeg
    libinput
    'wlroots'
    'glm'
    'libjpeg'
    'wf-config'
    'seatd'
)
makedepends=('git' 'meson' 'ninja' 'wayland-protocols' 'doctest' 'cmake' 'nlohmann-json')
conflicts=(
    "${_pkgname}-git"
    "${_pkgname}"
)
provides=("${_pkgname}")
source=(
    "${_pkgname}::git+https://github.com/WayfireWM/wayfire"
    "https://github.com/Vasak-OS/${_pluginname}/archive/refs/tags/${_pluginver}.tar.gz"
    "wayfire.patch"
)
sha256sums=(
    'SKIP'
    'd6370a014ff6ac0b8ca70a70257621322ab82db39a1e87eec7a1a17bdabeb668'
    '9d9bf865fa53be5b561afc2a981780927910a11d0a6fe84a4801451d80bd337e'
)

_builddir="build"
_builddir_pkgver="build-pkgver"

_meson_setup() {
    arch-meson \
        -Duse_system_wlroots=enabled \
        -Duse_system_wfconfig=enabled \
        -Dtests=disabled \
        "${srcdir}/${_pkgname}/" "$1"
}

prepare() {
    cd "${srcdir}/${_pkgname}"
    _meson_setup "${srcdir}/${_builddir_pkgver}"
}

pkgver() {
    (
        set -o pipefail
        meson introspect --projectinfo "${_builddir_pkgver}" |
            awk 'match($0, /"version":\s*"([[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+)"/, ret) {printf "%s",ret[1]}'
    )
    cd "${srcdir}/${_pkgname}"
    printf ".r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

build() {
    mv "${_pluginname}-${_pluginver}" "${_pkgname}/plugins/${_pluginname}"
    (
        cd "${srcdir}/${_pkgname}"
        patch -p1 <"${srcdir}/wayfire.patch"
    )
    rm -rf build
    _meson_setup "${srcdir}/${_builddir}"
    meson compile -C "${srcdir}/${_builddir}"
}

check() {
    meson test -C build
}

package() {
    DESTDIR="${pkgdir}/" meson install -C "${srcdir}/${_builddir}"
    install -m644 "${srcdir}/${_pkgname}/wayfire.ini" "${pkgdir}/usr/share"
}
